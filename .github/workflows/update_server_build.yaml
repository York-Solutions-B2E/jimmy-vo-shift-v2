name: build react/jar and redeploy
on:
  workflow_dispatch:
  pull_request:
    types: [merged]
    branches: [main]

jobs:
  build_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

#      - name: java environment
#        uses: actions/setup-java@v3
#        with:
#          java-version: 17
#          java-package: jdk
#          distribution: 'adopt'
#
#      - name: node environment
#        uses: actions/setup-node@v3
#        with:
#          node-version: 18.19.0
#
#      - name: Add application.properties to
#        uses: cuchi/jinja2-action@v1.2.2
#        with:
#          template: src/main/resources/application.properties.j2
#          output_file: src/main/resources/application.properties
#          strict: true
#          variables: |
#            PSQL_PW=${{ secrets.PSQL_PW }}
#
#
#      - name: build with psql credentials
#        run: |
#          mvn install
#          cd frontend
#          npm install
#          npm run build

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.6.6

#      - name: Create scheduler.pem file
#        run: |
#          cd infrastructure
#          echo "${{ secrets.SSH_PRIVATE_KEY }}" | base64 --decode > scheduler.pem
#          chmod 400 scheduler.pem

#      - name: Gather_public_ip
#        id: get_public_ip
#        run: |
#          cd infrastructure
#          terraform init -backend-config="access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" -backend-config="secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}"
#          GATHERED_IP=$(terraform output public_ip)
#          echo "PUBLIC_IP=$GATHERED_IP" | "$GITHUB_ENV"
#
#      - name: run ansible playbook with output variable
#        env:
#          PUBLIC_IP:
#        run: |
#          cd infrastructure
#          ansible-playbook -i $PUBLIC_IP, --private-key scheduler.pem redeploy.yaml -VVVV
#
#      - name: Gather_public_ip
#        id: get_public_ip
#        run: |
#          cd infrastructure
#          terraform init -backend-config="access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" -backend-config="secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}"
#          GATHERED_IP=$(terraform output public_ip | tr -d '"')
#          echo "PUBLIC_IP=$(($GATHERED_IP))" >> "$GITHUB_OUTPUT"
#
#      - name: run ansible playbook with output variable
#        env:
#          PUBLIC_IP: ${{steps.get_public_ip.outputs.PUBLIC_IP}}
#        run: |
#          cd infrastructure
#          ansible-playbook -i $PUBLIC_IP, --private-key scheduler.pem redeploy.yaml -VVVV

      - name: Gather_public_ip
        id: get_public_ip
        run: |
          cd infrastructure
          terraform init -backend-config="access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" -backend-config="secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}"

      - name: Run playbook
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: ./infrastructure/redeploy.yaml
          directory: ./infrastructure
          key: ${{secrets.SSH_PRIVATE_KEY}}
          vault_password: ${{secrets.ANSIBLE_VAULT_PW}}
          options: |
            --verbose
            --ssh-extra-args "-o StrictHostKeyChecking=no"
            --inventory ${{ terraform output public_ip | tr -d '"'}},
#          inventory: |
#            [all]
#            ${{ terraform output public_ip | tr -d '"'}}

#            --extra-vars hello=there
